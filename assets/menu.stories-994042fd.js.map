{"version":3,"file":"menu.stories-994042fd.js","sources":["../../src/components/Menu/menu.tsx","../../src/components/Menu/subMenu.tsx","../../src/components/Menu/menuItem.tsx","../../src/components/Menu/index.tsx"],"sourcesContent":["import React, { FC, useState, createContext, CSSProperties, ReactNode } from 'react'\nimport classNames from 'classnames'\nimport { MenuItemProps } from './menuItem'\n\ntype MenuMode = 'horizontal' | 'vertical'\nexport interface MenuProps {\n  /**\n   * 默认 active 的菜单项的索引值\n   */\n  defaultIndex?: string\n  className?: string\n  /**\n   * 菜单类型 横向或者纵向\n   */\n  mode?: MenuMode\n  /**\n   * 菜单样式\n   */\n  style?: CSSProperties\n  /**\n   * 点击菜单项触发的回掉函数\n   */\n  onSelect?: (selectedIndex: string) => void\n  /**\n   * 设置子菜单的默认打开 只在纵向模式下生效\n   */\n  defaultOpenSubMenus?: string[]\n\n  /**\n   * 子元素\n   */\n  children?: ReactNode | string\n}\ninterface IMenuContext {\n  index: string\n  onSelect?: (selectedIndex: string) => void\n  mode?: MenuMode\n  defaultOpenSubMenus?: string[]\n}\n\nexport const MenuContext = createContext<IMenuContext>({ index: '0' })\n/**\n * > 为网站提供导航功能的菜单。支持横向纵向两种模式，支持下拉菜单。\n *\n * ### 引用方法\n *\n * ```js\n *\n *  import { Menu } from 'v-design'\n *\n * ```\n */\nexport const Menu: FC<MenuProps> = props => {\n  const { className, mode, style, children, defaultIndex, onSelect, defaultOpenSubMenus } = props\n  const [currentActive, setActive] = useState(defaultIndex)\n  const classes = classNames('v-menu', className, {\n    'menu-vertical': mode === 'vertical',\n    'menu-horizontal': mode !== 'vertical',\n  })\n  const handleClick = (index: string) => {\n    setActive(index)\n    if (onSelect) {\n      onSelect(index)\n    }\n  }\n  const passedContext: IMenuContext = {\n    index: currentActive || '0',\n    onSelect: handleClick,\n    mode,\n    defaultOpenSubMenus,\n  }\n  const renderChildren = () => {\n    return React.Children.map(children, (child, index) => {\n      const childElement = child as React.FunctionComponentElement<MenuItemProps>\n      const { displayName } = childElement.type\n      if (displayName === 'MenuItem' || displayName === 'SubMenu') {\n        return React.cloneElement(childElement, {\n          index: index.toString(),\n        })\n      } else {\n        console.error('Warning: Menu has a child which is not a MenuItem component')\n      }\n    })\n  }\n  return (\n    <ul className={classes} style={style} data-testid=\"test-menu\">\n      <MenuContext.Provider value={passedContext}>{renderChildren()}</MenuContext.Provider>\n    </ul>\n  )\n}\nMenu.defaultProps = {\n  defaultIndex: '0',\n  mode: 'horizontal',\n  defaultOpenSubMenus: [],\n}\n\nexport default Menu\n","import React, { useContext, useState, FunctionComponentElement, ReactNode } from 'react'\nimport classNames from 'classnames'\nimport { MenuContext } from './menu'\nimport { MenuItemProps } from './menuItem'\nimport Icon from '../Icon/icon'\nimport Transition from '../Transition/transition'\nexport interface SubMenuProps {\n  index?: string\n  title: string\n  className?: string\n  children?: ReactNode | string\n}\n\nconst SubMenu: React.FC<SubMenuProps> = ({ index, title, children, className }) => {\n  const context = useContext(MenuContext)\n  const openedSubMenus = context.defaultOpenSubMenus as Array<string>\n  const isOpend = index && context.mode === 'vertical' ? openedSubMenus.includes(index) : false\n  const [menuOpen, setOpen] = useState(isOpend)\n  const classes = classNames('menu-item submenu-item', className, {\n    'is-active': context.index === index,\n    'is-opened': menuOpen,\n    'is-vertical': context.mode === 'vertical',\n  })\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault()\n    setOpen(!menuOpen)\n  }\n  let timer: any\n  const handleMouse = (e: React.MouseEvent, toggle: boolean) => {\n    clearTimeout(timer)\n    e.preventDefault()\n    timer = setTimeout(() => {\n      setOpen(toggle)\n    }, 300)\n  }\n  const clickEvents =\n    context.mode === 'vertical'\n      ? {\n          onClick: handleClick,\n        }\n      : {}\n  const hoverEvents =\n    context.mode !== 'vertical'\n      ? {\n          onMouseEnter: (e: React.MouseEvent) => {\n            handleMouse(e, true)\n          },\n          onMouseLeave: (e: React.MouseEvent) => {\n            handleMouse(e, false)\n          },\n        }\n      : {}\n  const renderChildren = () => {\n    const subMenuClasses = classNames('v-submenu', {\n      'menu-opened': menuOpen,\n    })\n    const childrenComponent = React.Children.map(children, (child, i) => {\n      const childElement = child as FunctionComponentElement<MenuItemProps>\n      if (childElement.type.displayName === 'MenuItem') {\n        return React.cloneElement(childElement, {\n          index: `${index}-${i}`,\n        })\n      } else {\n        console.error('Warning: SubMenu has a child which is not a MenuItem component')\n      }\n    })\n    return (\n      <Transition in={menuOpen} timeout={300} animation=\"zoom-in-top\">\n        <ul className={subMenuClasses}>{childrenComponent}</ul>\n      </Transition>\n    )\n  }\n  return (\n    <li key={index} className={classes} {...hoverEvents}>\n      <div className=\"submenu-title\" {...clickEvents}>\n        {title}\n        <Icon icon=\"angle-down\" className=\"arrow-icon\" />\n      </div>\n      {renderChildren()}\n    </li>\n  )\n}\n\nSubMenu.displayName = 'SubMenu'\nexport default SubMenu\n","import React, { ReactNode, useContext } from 'react'\nimport classNames from 'classnames'\nimport { MenuContext } from './menu'\nexport interface MenuItemProps {\n  index?: string\n  disabled?: boolean\n  className?: string\n  style?: React.CSSProperties\n  children?: ReactNode | string\n}\n\nconst MenuItem: React.FC<MenuItemProps> = props => {\n  const { index, disabled, className, style, children } = props\n  const context = useContext(MenuContext)\n  const classes = classNames('menu-item', className, {\n    'is-disabled': disabled,\n    'is-active': context.index === index,\n  })\n  const handleClick = () => {\n    if (context.onSelect && !disabled && typeof index === 'string') {\n      context.onSelect(index)\n    }\n  }\n  return (\n    <li className={classes} style={style} onClick={handleClick}>\n      {children}\n    </li>\n  )\n}\n\nMenuItem.displayName = 'MenuItem'\nexport default MenuItem\n","import Menu, { MenuProps } from './menu'\nimport SubMenu, { SubMenuProps } from './subMenu'\nimport MenuItem, { MenuItemProps } from './menuItem'\nimport { FC } from 'react'\nexport type IMenuComponent = FC<MenuProps> & {\n  Item: FC<MenuItemProps>\n  SubMenu: FC<SubMenuProps>\n}\n\nconst TransMenu = Menu as IMenuComponent\n\nTransMenu.Item = MenuItem\nTransMenu.SubMenu = SubMenu\n\nexport default TransMenu\n"],"names":["MenuContext","createContext","Menu","__name","props","className","mode","style","children","defaultIndex","onSelect","defaultOpenSubMenus","currentActive","setActive","useState","classes","classNames","passedContext","index","renderChildren","React","child","childElement","displayName","jsx","SubMenu","title","context","useContext","openedSubMenus","isOpend","menuOpen","setOpen","handleClick","e","timer","handleMouse","toggle","clickEvents","hoverEvents","subMenuClasses","childrenComponent","i","Transition","jsxs","Icon","MenuItem","disabled","TransMenu"],"mappings":"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"}