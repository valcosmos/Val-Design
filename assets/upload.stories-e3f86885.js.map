{"version":3,"file":"upload.stories-e3f86885.js","sources":["../../src/components/Upload/uploadList.tsx","../../src/components/Upload/dragger.tsx","../../src/components/Upload/upload.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport { UploadFile } from './upload'\nimport Icon from '../Icon/icon'\nimport Progress from '../Progress/progress'\ninterface UploadListProps {\n  fileList: UploadFile[]\n  onRemove: (_file: UploadFile) => void\n}\n\nexport const UploadList: FC<UploadListProps> = props => {\n  const { fileList, onRemove } = props\n\n  return (\n    <ul className=\"v-upload-list\">\n      {fileList.map(item => {\n        return (\n          <li className=\"v-upload-list-item\" key={item.uid}>\n            <span className={`file-name file-name-${item.status}`}>\n              <Icon icon=\"file-alt\" theme=\"secondary\" />\n              {item.name}\n            </span>\n            <span className=\"file-status\">\n              {(item.status === 'uploading' || item.status === 'ready') && (\n                <Icon icon=\"spinner\" spin theme=\"primary\" />\n              )}\n              {item.status === 'success' && <Icon icon=\"check-circle\" theme=\"success\" />}\n              {item.status === 'error' && <Icon icon=\"times-circle\" theme=\"danger\" />}\n            </span>\n            <span className=\"file-actions\">\n              <Icon\n                icon=\"times\"\n                onClick={() => {\n                  onRemove(item)\n                }}\n              />\n            </span>\n            {item.status === 'uploading' && <Progress percent={item.percent || 0} />}\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default UploadList\n","import React, { FC, useState, DragEvent, ReactNode } from 'react'\nimport classNames from 'classnames'\n\ninterface DraggerProps {\n  onFile: (files: FileList) => void\n  children?: ReactNode | string\n}\n\nexport const Dragger: FC<DraggerProps> = props => {\n  const { onFile, children } = props\n  const [dragOver, setDragOver] = useState(false)\n  const klass = classNames('v-uploader-dragger', {\n    'is-dragover': dragOver,\n  })\n  const handleDrop = (e: DragEvent<HTMLElement>) => {\n    e.preventDefault()\n    setDragOver(false)\n    onFile(e.dataTransfer.files)\n  }\n  const handleDrag = (e: DragEvent<HTMLElement>, over: boolean) => {\n    e.preventDefault()\n    setDragOver(over)\n  }\n  return (\n    <div\n      className={klass}\n      onDragOver={e => {\n        handleDrag(e, true)\n      }}\n      onDragLeave={e => {\n        handleDrag(e, false)\n      }}\n      onDrop={handleDrop}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Dragger\n","import React, { FC, useRef, ChangeEvent, useState, ReactNode } from 'react'\nimport axios from 'axios'\nimport UploadList from './uploadList'\nimport Dragger from './dragger'\nexport type UploadFileStatus = 'ready' | 'uploading' | 'success' | 'error'\nexport interface UploadFile {\n  uid: string\n  size: number\n  name: string\n  status?: UploadFileStatus\n  percent?: number\n  raw?: File\n  response?: any\n  error?: any\n}\nexport interface UploadProps {\n  /**\n   * 接口地址\n   */\n  action: string\n  /**\n   * file array\n   */\n  defaultFileList?: UploadFile[]\n  /**\n   * 上传前回调函数\n   */\n  beforeUpload?: (file: File) => boolean | Promise<File>\n  /**\n   * on progress\n   */\n  onProgress?: (percentage: number, file: File) => void\n  /**\n   * 上传成功的回调函数\n   */\n  onSuccess?: (data: any, file: File) => void\n  /**\n   * 上传错误的回调\n   */\n  onError?: (err: any, file: File) => void\n  /**\n   * 文件修改的回调\n   */\n  onChange?: (file: File) => void\n  /**\n   * 移除上传文件的回调\n   */\n  onRemove?: (file: UploadFile) => void\n  /**\n   * 请求头信息\n   */\n  headers?: { [key: string]: any }\n  /**\n   * name\n   */\n  name?: string\n  /**\n   * data\n   */\n  data?: { [key: string]: any }\n  /**\n   * 跨域请求时是否需要使用凭证\n   */\n  withCredentials?: boolean\n  /**\n   * 返回数据的类型\n   */\n  accept?: string\n  /**\n   * 是否允许选择多项\n   */\n  multiple?: boolean\n  /**\n   * 是否开启拖拽\n   */\n  drag?: boolean\n  /**\n   * children\n   *\n   */\n  children?: ReactNode | string\n}\n\nexport const Upload: FC<UploadProps> = props => {\n  const {\n    action,\n    defaultFileList,\n    beforeUpload,\n    onProgress,\n    onSuccess,\n    onError,\n    onChange,\n    onRemove,\n    name,\n    headers,\n    data,\n    withCredentials,\n    accept,\n    multiple,\n    children,\n    drag,\n  } = props\n  const fileInput = useRef<HTMLInputElement>(null)\n  const [fileList, setFileList] = useState<UploadFile[]>(defaultFileList || [])\n  const updateFileList = (updateFile: UploadFile, updateObj: Partial<UploadFile>) => {\n    setFileList(prevList => {\n      return prevList.map(file => {\n        if (file.uid === updateFile.uid) {\n          return { ...file, ...updateObj }\n        } else {\n          return file\n        }\n      })\n    })\n  }\n  const handleClick = () => {\n    if (fileInput.current) {\n      fileInput.current.click()\n    }\n  }\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files\n    if (!files) {\n      return\n    }\n    uploadFiles(files)\n    if (fileInput.current) {\n      fileInput.current.value = ''\n    }\n  }\n  const handleRemove = (file: UploadFile) => {\n    setFileList(prevList => {\n      return prevList.filter(item => item.uid !== file.uid)\n    })\n    if (onRemove) {\n      onRemove(file)\n    }\n  }\n  const uploadFiles = (files: FileList) => {\n    const postFiles = Array.from(files)\n    postFiles.forEach(file => {\n      if (!beforeUpload) {\n        post(file)\n      } else {\n        const result = beforeUpload(file)\n        if (result && result instanceof Promise) {\n          result.then(processedFile => {\n            post(processedFile)\n          })\n        } else if (result !== false) {\n          post(file)\n        }\n      }\n    })\n  }\n  const post = (file: File) => {\n    const _file: UploadFile = {\n      uid: Date.now() + 'upload-file',\n      status: 'ready',\n      name: file.name,\n      size: file.size,\n      percent: 0,\n      raw: file,\n    }\n    // setFileList([_file, ...fileList])\n    setFileList(prevList => {\n      return [_file, ...prevList]\n    })\n    const formData = new FormData()\n    formData.append(name || 'file', file)\n    if (data) {\n      Object.keys(data).forEach(key => {\n        formData.append(key, data[key])\n      })\n    }\n    axios\n      .post(action, formData, {\n        headers: {\n          ...headers,\n          'Content-Type': 'multipart/form-data',\n        },\n        withCredentials,\n        onUploadProgress: (e: any) => {\n          const percentage = Math.round((e.loaded * 100) / e.total) || 0\n          if (percentage < 100) {\n            updateFileList(_file, { percent: percentage, status: 'uploading' })\n            if (onProgress) {\n              onProgress(percentage, file)\n            }\n          }\n        },\n      })\n      .then(resp => {\n        updateFileList(_file, { status: 'success', response: resp.data })\n        if (onSuccess) {\n          onSuccess(resp.data, file)\n        }\n        if (onChange) {\n          onChange(file)\n        }\n      })\n      .catch(err => {\n        updateFileList(_file, { status: 'error', error: err })\n        if (onError) {\n          onError(err, file)\n        }\n        if (onChange) {\n          onChange(file)\n        }\n      })\n  }\n\n  return (\n    <div className=\"v-upload-component\">\n      <div className=\"v-upload-input\" style={{ display: 'inline-block' }} onClick={handleClick}>\n        {drag ? (\n          <Dragger\n            onFile={files => {\n              uploadFiles(files)\n            }}\n          >\n            {children}\n          </Dragger>\n        ) : (\n          children\n        )}\n        <input\n          className=\"v-file-input\"\n          style={{ display: 'none' }}\n          ref={fileInput}\n          onChange={handleFileChange}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n        />\n      </div>\n\n      <UploadList fileList={fileList} onRemove={handleRemove} />\n    </div>\n  )\n}\n\nUpload.defaultProps = {\n  name: 'file',\n}\nexport default Upload\n"],"names":["UploadList","__name","props","fileList","onRemove","jsx","item","jsxs","Icon","Progress","Dragger","onFile","children","dragOver","setDragOver","useState","klass","classNames","handleDrop","e","handleDrag","over","Upload","action","defaultFileList","beforeUpload","onProgress","onSuccess","onError","onChange","name","headers","data","withCredentials","accept","multiple","drag","fileInput","useRef","setFileList","updateFileList","updateFile","updateObj","prevList","file","handleClick","handleFileChange","files","uploadFiles","handleRemove","post","result","processedFile","_file","formData","key","axios","percentage","resp","err"],"mappings":"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"}