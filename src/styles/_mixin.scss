@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  border-radius: $border-radius;
}

@mixin button-style(
  $background,
  $border,
  $color,
  $hover-background: lighten($background, 7.5%),
  $hover-border: lighten($border, 10%),
  $hover-color: $color,
  $active-background: darken($color: $hover-background, $amount: 10%)
) {
  color: $color;
  background: $background;
  border-color: $border;
  &:hover {
    color: $hover-color;
    background: lighten($color: $hover-background, $amount: 5%);
    border-color: $hover-border;
  }
  &:focus,
  &.focus {
    outline: none;
    // color: $hover-color;
    // background: $hover-background;
    // border-color: $hover-border;
  }
  &:active {
    color: darken($color: $hover-color, $amount: 10%);
    background: $active-background;
  }
  &:disabled,
  &.disabled {
    color: $color;
    background: $background;
    border-color: $border;
  }
}

@mixin alert-style($background, $border, $color) {
  color: $color;
  background: $background;
  border-color: $border;
}

@mixin zoom-animation(
  $direction: 'top',
  $scaleStart: scaleY(0),
  $scaleEnd: scaleY(1),
  $origin: center top
) {
  .zoom-in-#{$direction}-enter {
    opacity: 0;
    transform: $scaleStart;
  }
  .zoom-in-#{$direction}-enter-active {
    opacity: 1;
    transform: $scaleEnd;
    transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms,
      opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
    transform-origin: $origin;
  }
  .zoom-in-#{$direction}-exit {
    opacity: 1;
  }
  .zoom-in-#{$direction}-exit-active {
    opacity: 0;
    transform: $scaleStart;
    transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms,
      opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
    transform-origin: $origin;
  }
}

@mixin border-right-radius($raduis) {
  border-top-right-radius: $raduis;
  border-bottom-right-radius: $raduis;
}

@mixin border-left-radius($raduis) {
  border-top-left-radius: $raduis;
  border-bottom-left-radius: $raduis;
}

@mixin border-top-radius($raduis) {
  border-top-left-radius: $raduis;
  border-top-right-radius: $raduis;
}

// @mixin elevation($z, $important: false) {
//   box-shadow: map-get($shadow-key-umbra, $z), map-get($shadow-key-penumbra, $z),
//     map-get($shadow-key-ambient, $z) if($important, !important, null);
// }

@mixin slide-animation($direction: 'top', $translateStartY: -100%, $translateStartX: 0) {
  .slide-in-#{$direction}-enter {
    opacity: 0;
    transform: translate($translateStartX, $translateStartY);
  }

  .slide-in-#{$direction}-enter-active {
    opacity: 1;
    transform: translate(0);
    transition: transform 200ms ease-out, opacity 200ms ease-in-out;
  }

  .slide-in-#{$direction}-exit {
    opacity: 1;
  }

  .slide-in-#{$direction}-exit-active {
    opacity: 0;
    transform: translate($translateStartX, $translateStartY);
    transition: transform 300ms linear 100ms, opacity 300ms ease-in-out;
  }
}
