{"version":3,"file":"Overlay.stories-b43186fa.js","sources":["../../src/components/Overlay/placement.ts","../../src/components/Overlay/utils.ts","../../src/components/Overlay/Overlay.tsx"],"sourcesContent":["type point = 'tl' | 'tc' | 'tr' | 'cl' | 'cc' | 'cr' | 'bl' | 'bc' | 'br'\n\nexport type PointType = [point, point]\nexport type PlacementType =\n  | 'topLeft'\n  | 'top'\n  | 'topRight'\n  | 'leftTop'\n  | 'left'\n  | 'leftBottom'\n  | 'rightTop'\n  | 'right'\n  | 'rightBottom'\n  | 'bottomLeft'\n  | 'bottom'\n  | 'bottomRight'\n\nconst placementMap = {\n  topLeft: ['bl', 'tl'],\n  top: ['bc', 'tc'],\n  topRight: ['br', 'tr'],\n  leftTop: ['tr', 'tl'],\n  left: ['cr', 'cl'],\n  leftBottom: ['br', 'bl'],\n  rightTop: ['tl', 'tr'],\n  right: ['cl', 'cr'],\n  rightBottom: ['bl', 'br'],\n  bottomLeft: ['tl', 'bl'],\n  bottom: ['tc', 'bc'],\n  bottomRight: ['tr', 'br'],\n}\n\nconsole.log(placementMap)\n\nexport function getPlacement({ target, overlay }: { target: HTMLElement; overlay?: any }) {\n  console.log('🚀 ~ file: placement.ts:37 ~ getPlacement ~ overlay', overlay)\n  const { width, height, left, top } = target.getBoundingClientRect()\n  console.log('🚀 ~ file: placement.ts:38 ~ getPlacement ~ width', width)\n\n  const { left: cleft, top: ctop } = document.body.getBoundingClientRect()\n  console.log('🚀 ~ file: placement.ts:41 ~ getPlacement ~ cleft', cleft)\n  const { scrollTop: cScrollTop, scrollLeft: cScrollLeft } = document.body\n  console.log('🚀 ~ file: placement.ts:43 ~ getPlacement ~ cScrollLeft', cScrollLeft)\n  return {\n    position: 'absolute',\n    top: top + height - ctop + cScrollTop,\n    let: left,\n  }\n}\n","import { useEffect } from 'react'\n\nexport function useListener(\n  node: (Window & typeof globalThis) | HTMLElement,\n  eventName: string,\n  callback: EventListenerOrEventListenerObject,\n  condition: boolean,\n) {\n  useEffect(() => {\n    if (condition) {\n      node.addEventListener(eventName, callback, false)\n      return () => {\n        node.removeEventListener(eventName, callback, false)\n      }\n    }\n  }, [condition])\n}\n","import React, {\n  cloneElement,\n  CSSProperties,\n  FC,\n  HTMLAttributes,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { createPortal } from 'react-dom'\nimport { getPlacement } from './placement'\nimport { useListener } from './utils'\n\nexport interface OverlayProps extends HTMLAttributes<HTMLDivElement> {\n  className?: string\n  children?: ReactElement\n  style?: CSSProperties\n  hasMask?: boolean\n  visible?: boolean\n  onVisibleChange?: (visible: boolean) => void\n  target?: HTMLElement\n}\n\nexport const Overlay: FC<OverlayProps> = props => {\n  const { children, target, visible: prevVisible, hasMask, onVisibleChange } = props\n\n  const [visible, setVisible] = useState(prevVisible || false)\n\n  const overlayRef = useRef<ReactNode | null>(null)\n\n  useEffect(() => {\n    if ('visible' in props) {\n      setVisible(prevVisible as boolean)\n    }\n  }, [prevVisible])\n\n  // useEffect(() => {\n  //   if (visible) {\n  //     const handleMouseDown = (e: MouseEvent) => {\n  //       const safeNodeList: any[] = []\n  //       // 弹窗默认为安全节点\n  //       if (overlayRef.current) {\n  //         safeNodeList.push(overlayRef.current)\n  //       }\n\n  //       const clickNode = e.target\n\n  //       for (let index = 0; index < safeNodeList.length; index++) {\n  //         const node = safeNodeList[index]\n  //         if (node && node.contains(clickNode)) {\n  //           return\n  //         }\n  //       }\n\n  //       onVisibleChange?.(false)\n  //     }\n  //     window.addEventListener('mousedown', handleMouseDown, false)\n\n  //     return () => window.removeEventListener('mousedown', handleMouseDown, false)\n  //   }\n  // }, [visible])\n\n  // useEffect(() => {\n  //   if (visible && overlayRef.current) {\n  //     const handleKeyDown = (e: KeyboardEvent) => {\n  //       if (!visible) return\n\n  //       if (e.key === 'Escape') {\n  //         onVisibleChange?.(false)\n  //       }\n  //     }\n\n  //     window.addEventListener('keydown', handleKeyDown, false)\n\n  //     return () => window.removeEventListener('keydown', handleKeyDown, false)\n  //   }\n  // }, [visible && overlayRef.current])\n\n  const handleMouseDown: EventListener = e => {\n    const safeNodeList: any[] = []\n    // 弹窗默认为安全节点\n    if (overlayRef.current) {\n      safeNodeList.push(overlayRef.current)\n    }\n\n    const clickNode = e.target\n\n    for (let index = 0; index < safeNodeList.length; index++) {\n      const node = safeNodeList[index]\n      if (node && node.contains(clickNode)) {\n        return\n      }\n    }\n\n    onVisibleChange?.(false)\n  }\n  const handleKeyDown: EventListener = e => {\n    if (!visible || !overlayRef.current) return\n\n    if ((e as KeyboardEvent).key === 'Escape') {\n      onVisibleChange?.(false)\n    }\n  }\n\n  useListener(window, 'mousedown', handleMouseDown, visible)\n  useListener(window, 'keydown', handleKeyDown, visible)\n\n  // 弹窗挂在 第一次 mount  node=真是dom 卸载的时候 node=null\n  const overlayRefCallback = useCallback((node: ReactNode) => {\n    overlayRef.current = node\n    if (node && target) {\n      const positionStyle = getPlacement({ target: target })\n      console.log(positionStyle)\n    }\n  }, [])\n\n  const child: ReactElement | undefined = React.Children.only(children)\n\n  const newChildren = cloneElement(child as ReactElement, {\n    ref: overlayRefCallback,\n  })\n\n  const content = createPortal(newChildren, document.body)\n\n  if (!visible) return null\n\n  return (\n    <div>\n      {hasMask ? <div></div> : null}\n      {content}\n    </div>\n  )\n}\n\nexport default Overlay\n"],"names":["placementMap","getPlacement","target","overlay","width","height","left","top","cleft","ctop","cScrollTop","cScrollLeft","useListener","node","eventName","callback","condition","useEffect","Overlay","props","children","prevVisible","hasMask","onVisibleChange","visible","setVisible","useState","overlayRef","useRef","handleMouseDown","e","safeNodeList","clickNode","index","handleKeyDown","overlayRefCallback","useCallback","positionStyle","child","React","newChildren","cloneElement","content","createPortal","jsxs","jsx"],"mappings":"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"}