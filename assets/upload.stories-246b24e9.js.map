{"version":3,"file":"upload.stories-246b24e9.js","sources":["../../src/components/Upload/uploadList.tsx","../../src/components/Upload/dragger.tsx","../../src/components/Upload/upload.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport { UploadFile } from './upload'\nimport Icon from '../Icon/icon'\nimport Progress from '../Progress/progress'\ninterface UploadListProps {\n  fileList: UploadFile[]\n  onRemove: (_file: UploadFile) => void\n}\n\nexport const UploadList: FC<UploadListProps> = props => {\n  const { fileList, onRemove } = props\n\n  return (\n    <ul className=\"v-upload-list\">\n      {fileList.map(item => {\n        return (\n          <li className=\"v-upload-list-item\" key={item.uid}>\n            <span className={`file-name file-name-${item.status}`}>\n              <Icon icon=\"file-alt\" theme=\"secondary\" />\n              {item.name}\n            </span>\n            <span className=\"file-status\">\n              {(item.status === 'uploading' || item.status === 'ready') && (\n                <Icon icon=\"spinner\" spin theme=\"primary\" />\n              )}\n              {item.status === 'success' && <Icon icon=\"check-circle\" theme=\"success\" />}\n              {item.status === 'error' && <Icon icon=\"times-circle\" theme=\"danger\" />}\n            </span>\n            <span className=\"file-actions\">\n              <Icon\n                icon=\"times\"\n                onClick={() => {\n                  onRemove(item)\n                }}\n              />\n            </span>\n            {item.status === 'uploading' && <Progress percent={item.percent || 0} />}\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default UploadList\n","import React, { FC, useState, DragEvent, ReactNode } from 'react'\nimport classNames from 'classnames'\n\ninterface DraggerProps {\n  onFile: (files: FileList) => void\n  children?: ReactNode | string\n}\n\nexport const Dragger: FC<DraggerProps> = props => {\n  const { onFile, children } = props\n  const [dragOver, setDragOver] = useState(false)\n  const klass = classNames('v-uploader-dragger', {\n    'is-dragover': dragOver,\n  })\n  const handleDrop = (e: DragEvent<HTMLElement>) => {\n    e.preventDefault()\n    setDragOver(false)\n    onFile(e.dataTransfer.files)\n  }\n  const handleDrag = (e: DragEvent<HTMLElement>, over: boolean) => {\n    e.preventDefault()\n    setDragOver(over)\n  }\n  return (\n    <div\n      className={klass}\n      onDragOver={e => {\n        handleDrag(e, true)\n      }}\n      onDragLeave={e => {\n        handleDrag(e, false)\n      }}\n      onDrop={handleDrop}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Dragger\n","import React, { FC, useRef, ChangeEvent, useState, ReactNode } from 'react'\nimport axios from 'axios'\nimport UploadList from './uploadList'\nimport Dragger from './dragger'\nexport type UploadFileStatus = 'ready' | 'uploading' | 'success' | 'error'\nexport interface UploadFile {\n  uid: string\n  size: number\n  name: string\n  status?: UploadFileStatus\n  percent?: number\n  raw?: File\n  response?: any\n  error?: any\n}\nexport interface UploadProps {\n  /**\n   * 接口地址\n   */\n  action: string\n  /**\n   * file array\n   */\n  defaultFileList?: UploadFile[]\n  /**\n   * 上传前回调函数\n   */\n  beforeUpload?: (file: File) => boolean | Promise<File>\n  /**\n   * on progress\n   */\n  onProgress?: (percentage: number, file: File) => void\n  /**\n   * 上传成功的回调函数\n   */\n  onSuccess?: (data: any, file: File) => void\n  /**\n   * 上传错误的回调\n   */\n  onError?: (err: any, file: File) => void\n  /**\n   * 文件修改的回调\n   */\n  onChange?: (file: File) => void\n  /**\n   * 移除上传文件的回调\n   */\n  onRemove?: (file: UploadFile) => void\n  /**\n   * 请求头信息\n   */\n  headers?: { [key: string]: any }\n  /**\n   * name\n   */\n  name?: string\n  /**\n   * data\n   */\n  data?: { [key: string]: any }\n  /**\n   * 跨域请求时是否需要使用凭证\n   */\n  withCredentials?: boolean\n  /**\n   * 返回数据的类型\n   */\n  accept?: string\n  /**\n   * 是否允许选择多项\n   */\n  multiple?: boolean\n  /**\n   * 是否开启拖拽\n   */\n  drag?: boolean\n  /**\n   * children\n   *\n   */\n  children?: ReactNode | string\n}\n\nexport const Upload: FC<UploadProps> = props => {\n  const {\n    action,\n    defaultFileList,\n    beforeUpload,\n    onProgress,\n    onSuccess,\n    onError,\n    onChange,\n    onRemove,\n    name,\n    headers,\n    data,\n    withCredentials,\n    accept,\n    multiple,\n    children,\n    drag,\n  } = props\n  const fileInput = useRef<HTMLInputElement>(null)\n  const [fileList, setFileList] = useState<UploadFile[]>(defaultFileList || [])\n  const updateFileList = (updateFile: UploadFile, updateObj: Partial<UploadFile>) => {\n    setFileList(prevList => {\n      return prevList.map(file => {\n        if (file.uid === updateFile.uid) {\n          return { ...file, ...updateObj }\n        } else {\n          return file\n        }\n      })\n    })\n  }\n  const handleClick = () => {\n    if (fileInput.current) {\n      fileInput.current.click()\n    }\n  }\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files\n    if (!files) {\n      return\n    }\n    uploadFiles(files)\n    if (fileInput.current) {\n      fileInput.current.value = ''\n    }\n  }\n  const handleRemove = (file: UploadFile) => {\n    setFileList(prevList => {\n      return prevList.filter(item => item.uid !== file.uid)\n    })\n    if (onRemove) {\n      onRemove(file)\n    }\n  }\n  const uploadFiles = (files: FileList) => {\n    const postFiles = Array.from(files)\n    postFiles.forEach(file => {\n      if (!beforeUpload) {\n        post(file)\n      } else {\n        const result = beforeUpload(file)\n        if (result && result instanceof Promise) {\n          result.then(processedFile => {\n            post(processedFile)\n          })\n        } else if (result !== false) {\n          post(file)\n        }\n      }\n    })\n  }\n  const post = (file: File) => {\n    const _file: UploadFile = {\n      uid: Date.now() + 'upload-file',\n      status: 'ready',\n      name: file.name,\n      size: file.size,\n      percent: 0,\n      raw: file,\n    }\n    // setFileList([_file, ...fileList])\n    setFileList(prevList => {\n      return [_file, ...prevList]\n    })\n    const formData = new FormData()\n    formData.append(name || 'file', file)\n    if (data) {\n      Object.keys(data).forEach(key => {\n        formData.append(key, data[key])\n      })\n    }\n    axios\n      .post(action, formData, {\n        headers: {\n          ...headers,\n          'Content-Type': 'multipart/form-data',\n        },\n        withCredentials,\n        onUploadProgress: (e: any) => {\n          const percentage = Math.round((e.loaded * 100) / e.total) || 0\n          if (percentage < 100) {\n            updateFileList(_file, { percent: percentage, status: 'uploading' })\n            if (onProgress) {\n              onProgress(percentage, file)\n            }\n          }\n        },\n      })\n      .then(resp => {\n        updateFileList(_file, { status: 'success', response: resp.data })\n        if (onSuccess) {\n          onSuccess(resp.data, file)\n        }\n        if (onChange) {\n          onChange(file)\n        }\n      })\n      .catch(err => {\n        updateFileList(_file, { status: 'error', error: err })\n        if (onError) {\n          onError(err, file)\n        }\n        if (onChange) {\n          onChange(file)\n        }\n      })\n  }\n\n  return (\n    <div className=\"v-upload-component\">\n      <div className=\"v-upload-input\" style={{ display: 'inline-block' }} onClick={handleClick}>\n        {drag ? (\n          <Dragger\n            onFile={files => {\n              uploadFiles(files)\n            }}\n          >\n            {children}\n          </Dragger>\n        ) : (\n          children\n        )}\n        <input\n          className=\"v-file-input\"\n          style={{ display: 'none' }}\n          ref={fileInput}\n          onChange={handleFileChange}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n        />\n      </div>\n\n      <UploadList fileList={fileList} onRemove={handleRemove} />\n    </div>\n  )\n}\n\nUpload.defaultProps = {\n  name: 'file',\n}\nexport default Upload\n"],"names":["UploadList","__name","props","fileList","onRemove","_jsx","item","_jsxs","status","Icon","Progress","Dragger","onFile","children","dragOver","setDragOver","useState","klass","classNames","handleDrop","e","handleDrag","over","Upload","action","defaultFileList","beforeUpload","onProgress","onSuccess","onError","onChange","name","headers","data","withCredentials","accept","multiple","drag","fileInput","useRef","setFileList","updateFileList","updateFile","updateObj","prevList","file","handleClick","handleFileChange","files","uploadFiles","handleRemove","postFiles","post","result","_file","size","formData","Object","axios","percentage","resp","err"],"mappings":"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"}