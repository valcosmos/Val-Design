{"version":3,"file":"autoComplete.stories-f7739953.js","sources":["../../src/hooks/useDebounce.tsx","../../src/hooks/useClickOutside.tsx","../../src/components/AutoComplete/autoComplete.tsx"],"sourcesContent":["// 处理防抖\n\nimport { useState, useEffect } from 'react'\n\nexport const useDebounce = (value: string, delay = 300) => {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n  useEffect(() => {\n    const handler = window.setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n    // 当useEffect回调里面 返回一个函数的时候 代表清除，下次update的时候执行\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n  return debouncedValue\n}\n","// 点击其它区域，关闭下拉菜单\n\nimport { RefObject, useEffect } from 'react'\n\nexport const useClickOutside = (ref: RefObject<HTMLElement>, handler: (event: Event) => void) => {\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (!ref.current || ref.current.contains(event.target as HTMLElement)) {\n        return\n      }\n      handler(event)\n    }\n    document.addEventListener('click', listener)\n    return () => {\n      document.removeEventListener('click', listener)\n    }\n  }, [ref, handler])\n}\n","import React, {\n  ChangeEvent,\n  FC,\n  ReactElement,\n  useEffect,\n  useState,\n  KeyboardEvent,\n  useRef,\n} from 'react'\n\nimport Icon from '../Icon'\n\nimport Transition from '../Transition'\n\nimport Input, { InputProps } from '../Input'\n\nimport { useDebounce } from '../../hooks/useDebounce'\n\nimport { useClickOutside } from '../../hooks/useClickOutside'\n\nimport classNames from 'classnames'\n\n/**\n * 用于处理复杂数据结构 eg:{value:'11', key:'22'}\n * 用户可自定义\n */\ninterface DataSourceObject {\n  value: string\n}\n\n/**\n * 传递一个范型 T, 默认为{}, 返回 传入的T & DataSourceObject\n */\nexport type DataSourceType<T = Record<string, unknown>> = T & DataSourceObject\n\nexport interface AutoCompleteProps extends Omit<InputProps, 'onSelect'> {\n  /**\n   *\n   */\n  fetchSuggestions: (str: string) => DataSourceType[] | Promise<DataSourceType[]>\n  /**\n   * 点击选择项的回调\n   */\n  onSelect?: (item: DataSourceType) => void\n  /**\n   * 自定义模板\n   */\n  renderOptions?: (item: DataSourceType) => ReactElement\n}\n\n/**\n * > AutoComplete 输入框自动完成功能，需要输入建议/辅助提示。\n *\n * ### 引入方法\n *\n * ```js\n *\n * import { AutoComplete } from 'val-design'\n *\n * ```\n */\nexport const AutoComplete: FC<AutoCompleteProps> = props => {\n  const { fetchSuggestions, onSelect, value, renderOptions, ...restProps } = props\n  // 输入的搜索关键字\n  const [inputValue, setInputValue] = useState((value as string) || '')\n  // 过滤之后的数据\n  const [suggestions, setSuggestions] = useState<DataSourceType[]>([])\n  // 发起异步请求之后的loading\n  const [loading, setLoading] = useState<boolean>(false)\n  // 控制高亮\n  const [highlightIndex, setHighlightIndex] = useState(-1)\n  // 操作键盘事件的时候，阻止列表再次请求\n  const triggerSearch = useRef(false)\n  // 点击其它区域，关闭列表\n  const componentRef = useRef<HTMLDivElement>(null)\n  // 防抖\n  const debouncedValue = useDebounce(inputValue, 500)\n\n  // 是否显示dropdown\n  const [showDropdown, setShowDropdown] = useState(false)\n\n  useClickOutside(componentRef, () => {\n    setSuggestions([])\n  })\n  useEffect(() => {\n    // 当value存在，更新value 和 suggestions list\n    if (debouncedValue && triggerSearch.current) {\n      const results = fetchSuggestions(debouncedValue)\n      if (results instanceof Promise) {\n        setLoading(true)\n        results.then(data => {\n          setSuggestions(data)\n          setLoading(false)\n          if (data.length > 0) {\n            setShowDropdown(true)\n          }\n        })\n      } else {\n        setSuggestions(results)\n        setShowDropdown(true)\n      }\n    } else {\n      setSuggestions([])\n      setShowDropdown(false)\n    }\n\n    // 加载成功后取消高亮\n    setHighlightIndex(-1)\n  }, [debouncedValue])\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim()\n    setInputValue(value)\n    triggerSearch.current = true\n  }\n\n  const handleSelect = (item: DataSourceType) => {\n    setInputValue(item.value)\n    setSuggestions([])\n    if (onSelect) {\n      onSelect(item)\n    }\n    triggerSearch.current = false\n  }\n  const highlight = (index: number) => {\n    if (index < 0) index = 0\n    if (index >= suggestions.length) {\n      index = suggestions.length - 1\n    }\n    setHighlightIndex(index)\n  }\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    switch (e.key) {\n      case 'Enter':\n        suggestions[highlightIndex] && handleSelect(suggestions[highlightIndex])\n        break\n      case 'ArrowUp':\n        highlight(highlightIndex - 1)\n        break\n      case 'ArrowDown':\n        highlight(highlightIndex + 1)\n        break\n      case 'Escape':\n        setSuggestions([])\n        break\n      default:\n        break\n    }\n  }\n\n  // render template\n  const renderTemplate = (item: DataSourceType) => {\n    return renderOptions ? renderOptions(item) : item.value\n  }\n\n  // dropdown\n  const generateDropdown = () => {\n    return (\n      <Transition\n        in={showDropdown || loading}\n        animation=\"zoom-in-top\"\n        timeout={300}\n        onExited={() => {\n          setSuggestions([])\n        }}\n      >\n        <ul\n          className={classNames({\n            'v-suggestion-list': suggestions.length > 0 || loading,\n          })}\n        >\n          {loading && (\n            <div className=\"suggstions-loading-icon\">\n              <Icon icon=\"spinner\" spin />\n            </div>\n          )}\n          {suggestions.map((item, index) => {\n            const cnames = classNames('suggestion-item', {\n              'is-active': index === highlightIndex,\n            })\n            return (\n              <li key={index} className={cnames} onClick={() => handleSelect(item)}>\n                {renderTemplate(item)}\n              </li>\n            )\n          })}\n        </ul>\n      </Transition>\n    )\n  }\n\n  return (\n    <div className=\"v-auto-complete\" ref={componentRef}>\n      <Input\n        {...restProps}\n        value={inputValue}\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n      ></Input>\n      {/* {loading && (\n        <ul>\n          <Icon icon={'spinner'} spin></Icon>\n        </ul>\n      )} */}\n      {generateDropdown()}\n    </div>\n  )\n}\n\nexport default AutoComplete\n"],"names":["useDebounce","value","delay","debouncedValue","setDebouncedValue","useState","useEffect","handler","useClickOutside","ref","listener","event","AutoComplete","props","fetchSuggestions","onSelect","renderOptions","restProps","inputValue","setInputValue","suggestions","setSuggestions","loading","setLoading","highlightIndex","setHighlightIndex","triggerSearch","useRef","componentRef","showDropdown","setShowDropdown","results","data","handleChange","value2","handleSelect","item","highlight","index","handleKeyDown","renderTemplate","generateDropdown","jsx","Transition","jsxs","classNames","Icon","cnames","Input"],"mappings":"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"}