{"version":3,"file":"radioGroup.stories-d3e485a5.js","sources":["../../src/components/Radio/radioGroup.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport React, {\n  Children,\n  cloneElement,\n  CSSProperties,\n  FC,\n  FormEvent,\n  HTMLAttributes,\n  ReactNode,\n  useState,\n} from 'react'\nimport Radio from './radio'\n\nexport interface RadioGroupProps extends HTMLAttributes<HTMLInputElement> {\n  value?: string\n  defaultValue?: string\n  onChange?: (event: FormEvent<HTMLInputElement>) => void\n  disabled?: boolean\n  className?: string\n  children?: ReactNode\n  style?: CSSProperties\n}\n\nexport const RadioGroup: FC<RadioGroupProps> = props => {\n  const { disabled, children } = props\n\n  const [value, setValue] = useState(props.defaultValue || props.value)\n  const cls = classNames({\n    'v-radio-group': true,\n  })\n\n  const handleClick = (e: any) => {\n    const value = e.target.value\n    setValue(value)\n  }\n\n  const newChildren = Children.map(children, (child: any) => {\n    if (child.type !== Radio) return null\n    return cloneElement(child, {\n      checked: child.props.value === value,\n      disabled: disabled,\n      onChange: handleClick,\n    })\n  })\n\n  return <span className={cls}>{newChildren}</span>\n}\n\nexport default RadioGroup\n"],"names":["RadioGroup","props","disabled","children","value","setValue","useState","cls","classNames","handleClick","e","value2","newChildren","Children","child","Radio","cloneElement","jsx"],"mappings":"6MAuBO,MAAAA,EAAAC,GAAA,CACL,KAAA,CAAA,SAAAC,EAAA,SAAAC,CAAA,EAAAF,EAEA,CAAAG,EAAAC,CAAA,EAAAC,EAAAA,SAAAL,EAAA,cAAAA,EAAA,KAAA,EACAM,EAAAC,EAAA,CAAuB,gBAAA,EACJ,CAAA,EAGnBC,EAAAC,GAAA,CACE,MAAAC,EAAAD,EAAA,OAAA,MACAL,EAAAM,CAAA,CAAc,EAGhBC,EAAAC,EAAA,SAAA,IAAAV,EAAAW,GACEA,EAAA,OAAAC,EAA0B,KAC1BC,EAAAA,aAAAF,EAAA,CAA2B,QAAAA,EAAA,MAAA,QAAAV,EACM,SAAAF,EAC/B,SAAAO,CACU,CAAA,CACX,EAGH,OAAAQ,EAAAA,IAAA,OAAA,CAAA,UAAAV,EAAA,SAAAK,CAAA,CAAA,CACF;;;;;;;;;;;;;"}